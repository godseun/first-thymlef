<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.daehwa.b2b.shop.dao.ShopSearchDao">

	<!-- 특정상품 카테고리 정보 -->
	<sql id="categBody">
		   SELECT   
		   			T1.CATEG_CD AS LEV1_CD,
		            T1.CATEG_NM AS LEV1_NM,
		            T2.CATEG_CD AS LEV2_CD,
		            T2.CATEG_NM AS LEV2_NM,
		            T3.CATEG_CD AS LEV3_CD,
		            T3.CATEG_NM AS LEV3_NM,
		            T4.CATEG_CD AS LEV4_CD,
		            T4.CATEG_NM AS LEV4_NM,
		            T5.CATEG_CD AS LEV5_CD,
		            T5.CATEG_NM AS LEV5_NM,
		            T5.PRODUCT_CNT AS LEV5_CNT
		   FROM     CATEG_INFO           AS T1
		            LEFT JOIN CATEG_INFO AS T2
		            ON       T2.P_CATEG_CD = T1.CATEG_CD
		            LEFT JOIN CATEG_INFO AS T3
		            ON       T3.P_CATEG_CD = T2.CATEG_CD
		            LEFT JOIN CATEG_INFO AS T4
		            ON       T4.P_CATEG_CD = T3.CATEG_CD
		            LEFT JOIN CATEG_INFO AS T5
		            ON       T5.P_CATEG_CD = T4.CATEG_CD
		   WHERE    1 = 1
	</sql>	
	
	<!-- 자기 자신 / 하위 카테고리 정보 -->
	<sql id="categBody2">
		   SELECT   
          			DISTINCT 
						<isEqual property="cTp" compareValue="0">
								'0' AS LEV1_TP
						</isEqual>
						<isEqual property="cTp" compareValue="1">
								T1.CATEG_TY_CD AS LEV1_TP
						</isEqual>
						<isEqual property="cTp" compareValue="2">
								T2.CATEG_TY_CD AS LEV1_TP
						</isEqual>
						<isEqual property="cTp" compareValue="3">
								T3.CATEG_TY_CD AS LEV1_TP
						</isEqual>
						<isEqual property="cTp" compareValue="4">
								T4.CATEG_TY_CD AS LEV1_TP
						</isEqual>
						<isEqual property="cTp" compareValue="5">
								T5.CATEG_TY_CD AS LEV1_TP
						</isEqual>
		   			,T1.CATEG_CD AS LEV1_CD
		            ,T1.CATEG_NM AS LEV1_NM
		            <isGreaterEqual property="cTp" compareValue="1">
				            ,T2.CATEG_CD AS LEV2_CD
				            ,T2.CATEG_NM AS LEV2_NM		           
				            ,T2.PRODUCT_CNT AS LEV2_CNT
		            </isGreaterEqual>
		            <isGreaterEqual property="cTp" compareValue="2">
			            ,T3.CATEG_CD AS LEV3_CD
			            ,T3.CATEG_NM AS LEV3_NM
			            ,T3.PRODUCT_CNT AS LEV3_CNT
		            </isGreaterEqual>
		            <isGreaterEqual property="cTp" compareValue="3">
			            ,T4.CATEG_CD AS LEV4_CD
			            ,T4.CATEG_NM AS LEV4_NM
		            </isGreaterEqual>
		            <isGreaterEqual property="cTp" compareValue="4">
			            ,T5.CATEG_CD AS LEV5_CD
			            ,T5.CATEG_NM AS LEV5_NM
			            ,T5.PRODUCT_CNT AS LEV5_CNT
		            </isGreaterEqual>
		   FROM     CATEG_INFO           AS T1
		            LEFT JOIN CATEG_INFO AS T2
		            ON       T2.P_CATEG_CD = T1.CATEG_CD
		            LEFT JOIN CATEG_INFO AS T3
		            ON       T3.P_CATEG_CD = T2.CATEG_CD
		            LEFT JOIN CATEG_INFO AS T4
		            ON       T4.P_CATEG_CD = T3.CATEG_CD
		            LEFT JOIN CATEG_INFO AS T5
		            ON       T5.P_CATEG_CD = T4.CATEG_CD
		   WHERE    1 = 1
	</sql> 

	<!-- 1단계 카테고리 정보만 표시 -->
	<sql id="categBody3">
		   SELECT   
          			DISTINCT 
						'0' AS LEV1_TP
		   			,T1.CATEG_CD AS LEV1_CD
		            ,T1.CATEG_NM AS LEV1_NM
		   FROM     CATEG_INFO           AS T1
		            LEFT JOIN CATEG_INFO AS T2
		            ON       T2.P_CATEG_CD = T1.CATEG_CD
		            LEFT JOIN CATEG_INFO AS T3
		            ON       T3.P_CATEG_CD = T2.CATEG_CD
		            LEFT JOIN CATEG_INFO AS T4
		            ON       T4.P_CATEG_CD = T3.CATEG_CD
		            LEFT JOIN CATEG_INFO AS T5
		            ON       T5.P_CATEG_CD = T4.CATEG_CD
		   WHERE    1 = 1
	</sql> 
	
	<sql id="categWhere">
		   AND    T3.CATEG_TY_CD         = '3'
		   AND    T3.CATEG_CD IN
										            (
										            SELECT 
										            	CATEG_CD
										            FROM
														PRDT_MST PM
										            WHERE   
										            	PM.PRDT_CD = #pCode#
										            )
	</sql>
	
	<sql id="categDepthWhere">
			<isEqual property="cTp" compareValue="0">
				AND    T3.CATEG_TY_CD		= '3'
			</isEqual>
			<isEqual property="cTp" compareValue="1">
				AND    T1.CATEG_TY_CD		= #cTp#
		   		AND    T1.CATEG_CD 			IN 
		   		<isNotEmpty property="cCodeList">
							<isNotNull property="cCodeList">
								
									<iterate property="cCodeList" open="(" conjunction="," close=")">
										 #cCodeList[]#
									</iterate>
							</isNotNull>
		         </isNotEmpty>
			</isEqual>
			<isEqual property="cTp" compareValue="2">
				AND    T2.CATEG_TY_CD   		= #cTp#
		   		AND    T2.CATEG_CD 			= #cCode#
			</isEqual>
			<isEqual property="cTp" compareValue="3">
				AND    T3.CATEG_TY_CD		= #cTp#
		   		AND    T3.CATEG_CD 			= #cCode#
			</isEqual>
			<isEqual property="cTp" compareValue="4">
				AND    T4.CATEG_TY_CD		= #cTp#
		   		AND    T4.CATEG_CD				= #cCode#
			</isEqual>
			<isEqual property="cTp" compareValue="5">
				AND    T5.CATEG_TY_CD		= #cTp#
		   		AND    T5.CATEG_CD				= #cCode#
			</isEqual>
	</sql>
 
	<!-- 카운트용 제품 정보 -->
	<sql id="cntBody">
			SELECT 
					 PM.PRDT_CD  
			FROM   PRDT_MST PM,
			       PRDT_DTL PD
	</sql>

	<!-- 카테고리 정보 -->
	<sql id="categInfoBody">
			SELECT 
					 DISTINCT PM.CATEG_CD
			FROM   PRDT_MST PM,
			       PRDT_DTL PD
	</sql>
	
	<!-- 제조사 정보 -->
	<sql id="makerInfoBody">
			SELECT 
					 DISTINCT PM.MAKR_CD
			FROM   PRDT_MST PM,
			       PRDT_DTL PD
	</sql>
	
   <!-- 리스트용 제품 정보 -->
	<sql id="body">
			SELECT 
				   PM.PRDT_CD ,
			       PD.PRDT_DTL_CD ,
			       PM.STORE_ID ,
			       PM.CATEG_CD ,
			       PM.PRDT_NM ,
			       PM.MAKR_NM ,
			       PD.STNDRD ,
			       PD.MODEL_NM ,
			       PD.SEL_PRICE ,
				   PD.SALE_PRICE ,
			   	   PD.OUT_AMT,
			   	   PD.OUT_UNIT,
			       PD.SOLDOUT_AT,
			       PD.RE_SALE_DT,
			       PM.PRDT_IMG
			FROM   PRDT_MST PM,
			       PRDT_DTL PD
	</sql>
	
   <!-- 리스트용 / 카테고리 포함 제품 정보 조회 -->
	<sql id="body2">
			SELECT 
				PM.PRDT_CD ,
				PD.PRDT_DTL_CD ,
				PM.STORE_ID ,
				PM.CATEG_CD ,
				PM.PRDT_NM ,
				PM.MAKR_NM ,
              	PM.PRDT_INFO , 
				PD.STNDRD ,
				PD.MODEL_NM ,
				PD.SEL_PRICE ,
				PD.SALE_PRICE ,
		   	    PD.OUT_AMT,
		   	    PD.OUT_UNIT,
				PD.SOLDOUT_AT,
				PD.RE_SALE_DT,
				PM.PRDT_IMG,
				CATEG.LEV3_CD,
				CATEG.LEV3_NM,
				CATEG.LEV4_CD,
				CATEG.LEV4_NM,
				CATEG.LEV5_CD,
				CATEG.LEV5_NM
			FROM   PRDT_MST PM,
			       PRDT_DTL PD
	</sql>

	<sql id="where">  
			WHERE	PM.PRDT_CD = PD.PRDT_CD	
				AND	PM.STORE_ID = PD.STORE_ID
				AND	PM.USE_YN ='Y'
				AND	PD.USE_YN ='Y'
			<isNotEmpty property="sub_sValue">
				AND(			
								PM.PRDT_NM LIKE CONCAT('%',#sub_sValue#,'%')
						OR		PM.MAKR_NM LIKE CONCAT('%',#sub_sValue#,'%')
						OR		PD.STNDRD LIKE CONCAT('%',#sub_sValue#,'%')
						OR		PD.MODEL_NM LIKE CONCAT('%',#sub_sValue#,'%')
				)
			</isNotEmpty>
			<isNotEmpty property="sub_pName">
				AND			PM.PRDT_NM LIKE CONCAT('%',#sub_pName#,'%')
			</isNotEmpty>
			<isNotEmpty property="sub_sBrand">
				AND			PM.MAKR_NM LIKE CONCAT('%',#sub_sBrand#,'%')
			</isNotEmpty>
			<isNotEmpty property="sub_sStndrd">
				AND			PD.STNDRD LIKE CONCAT('%',#sub_sStndrd#,'%')
			</isNotEmpty>
			<isNotEmpty property="sub_sModel">
				AND			PD.MODEL_NM LIKE CONCAT('%',#sub_sModel#,'%')
			</isNotEmpty>
	</sql>
	
	<!-- 제조사 선택한 경우 -->
	<sql id="brandWhere">
		<isNotEmpty property="cBrandList">
			<isNotNull property="cBrandList">
				AND PM.MAKR_CD IN
					<iterate property="cBrandList" open="(" conjunction="," close=")">
						 #cBrandList[]#
					</iterate>
			</isNotNull>
		</isNotEmpty>
	</sql>
	
	<sql id="keyWordWhere">  
			<isNotEmpty property="mValueList">
				<isNotNull property="mValueList">
					<iterate property="mValueList" open="AND(	" conjunction=") AND(" close=")">
								PM.PRDT_NM LIKE CONCAT('%',#mValueList[]#,'%')
						OR		PM.PRDT_ETC_NM LIKE CONCAT('%',#mValueList[]#,'%')
						OR		PM.MAKR_NM LIKE CONCAT('%',#mValueList[]#,'%')
						OR		PD.STNDRD LIKE CONCAT('%',#mValueList[]#,'%')
						OR		PD.MODEL_NM LIKE CONCAT('%',#mValueList[]#,'%')
					</iterate>
				</isNotNull>
			</isNotEmpty>
			<isEmpty property="mValueList">
				<isNotEmpty property="mValue">
					AND(			
									PM.PRDT_NM LIKE CONCAT('%',#mValue#,'%')
							OR		PM.PRDT_ETC_NM LIKE CONCAT('%',#mValue#,'%')
							OR		PM.MAKR_NM LIKE CONCAT('%',#mValue#,'%')
							OR		PD.STNDRD LIKE CONCAT('%',#mValue#,'%')
							OR		PD.MODEL_NM LIKE CONCAT('%',#mValue#,'%')
							OR		PM.PRDT_CD LIKE CONCAT('%',#mValue#,'%')
							OR		PD.PRDT_DTL_CD LIKE CONCAT('%',#mValue#,'%')
					)
				</isNotEmpty>
			</isEmpty>
			<isNotEmpty property="mName">
				AND			PM.PRDT_NM LIKE CONCAT('%',#mName#,'%')
			</isNotEmpty>
			<isNotEmpty property="mBrand">
				AND			PM.MAKR_NM LIKE CONCAT('%',#mBrand#,'%')
			</isNotEmpty>
			<isNotEmpty property="mStndrd">
				AND			PD.STNDRD LIKE CONCAT('%',#mStndrd#,'%')
			</isNotEmpty>
			<isNotEmpty property="mModel">
				AND			PD.MODEL_NM LIKE CONCAT('%',#mModel#,'%')
			</isNotEmpty>
			<isNotEmpty property="mCode">
				AND			PD.PRDT_DTL_CD  = #mCode#
			</isNotEmpty>
			<isNotEmpty property="mStore">
				AND			PD.STORE_ID = #mStore#
			</isNotEmpty>
	</sql>
		
	<!-- 상품 info - 품목정보 -->
	<sql id="prductBody">
			SELECT 
					PM.PRDT_CD,
					PM.STORE_ID,
					PM.CATEG_CD,
					PM.PRDT_NM,
					PM.PRDT_ETC_NM,
					PM.PRDT_TP,
					PM.ORG_PRDT_CD,
       				(SELECT DTL_CD_NM FROM CMM_CODE_DTL WHERE DTL_CD = PM.ORG_PLCE AND CL_CD ='1002') AS ORG_CMP_NM ,
					PM.ORG_CMP_CD,
					PM.PRDT_IMG,
					PM.EXTRA_IMG_AT,
					CASE
					WHEN PM.EXTRA_IMG_AT = 'Y' AND INSTR(PM.EXTRA_IMG_NO,'//')>0
					THEN PM.EXTRA_IMG_NO
					WHEN PM.EXTRA_IMG_AT = 'Y'
					THEN (SELECT
							  GROUP_CONCAT(FILE_PATH, FILE_SAVE_NAME ORDER BY FILE_ID SEPARATOR '|')  
							FROM  BOARD_FILE 
							WHERE ARTICLE_ID = PM.EXTRA_IMG_NO
							AND BBS_ID = 'PRDT_SUB'
							AND USE_AT ='Y')
					ELSE ''					
					END AS EXTRA_IMG,
					PM.EBOOK_IMG_AT,
					IF(
						PM.EBOOK_IMG_AT = 'Y'
						,(
							SELECT 
								CONCAT(FILE_PATH,FILE_SAVE_NAME) 
							FROM BOARD_FILE 
							WHERE FILE_ID = PM.EBOOK_IMG_NO 
							AND  BBS_ID ='CATALOG'
							AND USE_AT ='Y'
						)
						,'NO'
					) AS EBOOK_IMG_NO,
					PM.CTL_IMG_AT,
					CASE
					WHEN PM.CTL_IMG_AT = 'Y' AND INSTR(PM.CTL_IMG_NO,'//')>0
					THEN PM.CTL_IMG_NO
					WHEN PM.CTL_IMG_AT = 'Y'
					THEN (SELECT
							  GROUP_CONCAT(FILE_STRE_COURS, FILE_STRE_NM ORDER BY ORGINL_FILE_NM SEPARATOR '|')  
							FROM  ATCH_FILE 
							WHERE ATCH_FILE_NO = PM.CTL_IMG_NO
							AND ATCH_TP = 'PDI'
							AND USE_AT ='Y')
					ELSE ''
					 END AS CTL_IMG,
					PM.MOVE_AT,
					PM.ST_CARE_AT,
					PM.MNF_AT,
					PM.PRDT_INFO,
					PM.PRDT_DTL_INFO,
					PM.PRDT_NOTICE_TP,
					PM.DLVY_TP,
					PM.DLVY_FEE_TP,
					PM.PKG_TP,
					PM.DLVY_FEE,
       				CASE WHEN PM.DLVY_TP = 'T' AND ( PM.DLVY_FEE_TP != '2' AND PM.DLVY_FEE_TP != '3' ) THEN 1 ELSE 0 END AS DLVY_MEG, 
					PM.PRDT_MD,
					PM.MAKR_NM,
					PM.ORG_PLCE,
					PM.V_MD_AT,
					PM.EXT_INFO_TIT_1, 
					PM.EXT_INFO_VAL_1,
					PM.EXT_INFO_TIT_2,
					PM.EXT_INFO_VAL_2,
					PM.EXT_INFO_TIT_3,
					PM.EXT_INFO_VAL_3,
					PM.EXT_INFO_TIT_4,
					PM.EXT_INFO_VAL_4,
					PM.EXT_INFO_TIT_5,
					PM.EXT_INFO_VAL_5,
					PM.EXT_INFO_TIT_6,
					PM.EXT_INFO_VAL_6,
					SI.FREE_DLVY,
					SI.FREE_AMT,
					SI.RTN_FEE,
					SI.ECHG_FEE,
					SI.EXTRA_FEE_TP,
					SI.T_ZONE1,
					SI.T_ZONE2,
					SI.T_ZONE3,
					SI.H_ZONE1,
					SI.H_ZONE2,
					SI.H_ZONE3,
					SI.APPN_RTN_HDRY,
					SI.HDRY,
					SI.RTN_ZIP_CD,
					SI.RTN_ADRES,
					SI.RTN_ADRES_DTL,  
     				IF(SI.SHOW_TP='S',SI.STORE_NM, SI.CMP_NM) AS S_NM
			  FROM   PRDT_MST PM,  STORE_INFO SI
			  WHERE 1 = 1   
			  	AND PM.STORE_ID = SI.STORE_ID
	</sql>

	<sql id="prductWhere">  
			<isNotEqual property="isAdmin" compareValue="N">
				AND PM.USE_YN  	='Y'
			</isNotEqual>
				AND PM.PRDT_CD = #pCode#
	</sql>

	<!-- 상품 info - 규격정보 -->
	<sql id="stndrdBody">
			SELECT 
				    PD.PRDT_CD,
				    PD.STORE_ID,
				    PD.PRDT_DTL_CD,
				    PD.PRDT_IMG,
				    PD.MAIN_STD_AT,
				    PD.BARCODE,
				    PD.ORG_PRDT_CD,
				    PD.ORG_CMP_CD,
				    PD.STNDRD,
				    PD.MODEL_NM,
				    PD.RSRVMNEY,
				    PD.INVT_AMT,
				    PD.SEL_PRICE,
				    PD.SALE_PRICE,
				    IF(
				    	PD.SALE_PRICE = 0
				    	,''
				    	,(
							SELECT 
								DATE_FORMAT(DATE(B.BBS_END_DT),'%Y%m%d160000')
							FROM BOARD B
					 		WHERE B.BBS_ID ='TSP' 
								AND B.BBS_STRT_DT <![CDATA[<=]]> DATE_FORMAT(NOW(),'%Y%m%d')
								AND B.BBS_END_DT <![CDATA[>=]]> DATE_FORMAT(NOW(),'%Y%m%d')
								AND B.USE_YN = 'Y'				    	
				    	)
				    )AS SALE_END_DT,
				    IF(
				    	PD.SALE_PRICE = 0
				    	,'0'
				    	,(
							SELECT 
								DATE(B.BBS_END_DT) - DATE(B.BBS_STRT_DT)
							FROM BOARD B
					 		WHERE B.BBS_ID ='TSP' 
								AND B.BBS_STRT_DT <![CDATA[<=]]> DATE_FORMAT(NOW(),'%Y%m%d')
								AND B.BBS_END_DT <![CDATA[>=]]> DATE_FORMAT(NOW(),'%Y%m%d')
								AND B.USE_YN = 'Y'				    	
				    	)
				    )AS SALE_TERM,
				    PD.PUR_PRICE,
			   	    PD.OUT_AMT,
			   	    PD.OUT_UNIT,
				    PD.PUR_SUPPLY,
				    PD.SOLDOUT_AT,
       				DATE_FORMAT(PD.SOLDOUT_DT,'%Y-%m-%d') AS SOLDOUT_DT,
      	 			DATE_FORMAT(PD.RE_SALE_DT,'%Y-%m-%d') AS RE_SALE_DT,
				    PD.SEL_CNT 
			  FROM   PRDT_DTL PD
			  WHERE  1 = 1
	</sql>
	
  	<sql id="stndrdWhere">  
			<isNotEqual property="isAdmin" compareValue="N">
					AND PD.USE_YN  	='Y'
			</isNotEqual>
			<isEqual property="searchTp" compareValue="P">
					AND PD.PRDT_CD = #pCode#
			</isEqual>
			<isEqual property="searchTp" compareValue="S">
					AND PD.PRDT_DTL_CD = #pCode#
			</isEqual>
	</sql>

	<select id="ajaxSuggest" parameterClass="map" resultClass="map">
		/* ShopSearchDao.ajaxSuggest */
		(SELECT 
						CONCAT('##',KEYWORD) AS KEYWORD
						,CONCAT(<![CDATA['<sapn style="color:blue">']]>
									, '##', KEYWORD	
									, <![CDATA['</sapn>']]>
									) AS KEY_TEXT
		  FROM DICTIONARY 
		 WHERE KEYWORD LIKE CONCAT(UPPER(#keyWord#), '%')	
		 AND KEY_TYPE = 'T'
		ORDER BY KEY_ID LIMIT 0, 5
		) 
		UNION ALL
		(SELECT 
						KEYWORD	
						,CONCAT(SUBSTRING_INDEX(KEYWORD,UPPER(#keyWord#),1)
										, <![CDATA['<sapn style="color:red">']]>
										, UPPER(#keyWord#)   
										, <![CDATA['</sapn>']]>
										, SUBSTRING_INDEX(KEYWORD,UPPER(#keyWord#),-1) ) AS KEY_TEXT
		  FROM DICTIONARY 
		 WHERE KEYWORD LIKE CONCAT(UPPER(#keyWord#), '%')	
		 AND KEY_TYPE != 'T'
		ORDER BY KEY_ID LIMIT 0, 10
		) 		
	</select>	
	
	<!-- 메인페이지용 상품 정보 조회-->
	<select id="getMainList" parameterClass="map" resultClass="map">
		/* ShopSearchDao.getMainList */
			SELECT 
				   PM.PRDT_CD ,
			       PD.PRDT_DTL_CD ,
			       PM.STORE_ID ,
			       (SELECT P_CATEG_CD
			       FROM    CATEG_INFO
			       WHERE   CATEG_CD =
			               ( SELECT P_CATEG_CD
			               FROM    CATEG_INFO
			               WHERE   CATEG_CD =
			                       ( SELECT P_CATEG_CD
			                       FROM    CATEG_INFO
			                       WHERE   CATEG_CD = PM.CATEG_CD
			                       )
			               )
			       )
			       AS P_CATEG_CD ,
			       PM.CATEG_CD ,
			       PM.PRDT_NM , 
			       PM.MAKR_NM ,
			       PD.STNDRD ,
			       PD.MODEL_NM ,
			       PD.SEL_PRICE ,
			       PD.SALE_PRICE ,
			       PM.PRDT_IMG ,
			       PM.V_MD_AT ,
			       PM.V_HIT_AT ,
			       PM.V_MOB_AT ,
			FROM   PRDT_MST PM,
			       PRDT_DTL PD
			WHERE	PM.PRDT_CD = PD.PRDT_CD	
				AND	PM.STORE_ID = PD.STORE_ID
				AND	PM.USE_YN ='Y'
				AND	PD.USE_YN ='Y'
				AND	PM.PRDT_CD = PD.PRDT_DTL_CD
				AND	(
					           PM.V_MD_AT   	='Y'
					      OR PM.V_HIT_AT  	='Y'
					      OR PM.V_MOB_AT  	='Y'
					     )      
			ORDER BY P_CATEG_CD, PM.PRDT_CD	 
	</select>	

   <!-- 메인 / 키워드 검색 상품 리스트 -->
	<select id="getMainSerchList" parameterClass="map" resultClass="map">
		/*ShopSearchDao.getMainSerchList*/
		SELECT
			A.PRDT_CD,
			A.STORE_ID ,
			A.CATEG_CD , 
			A.PRDT_NM ,
			A.MAKR_NM ,
			A.SEL_PRICE, 
			A.SALE_PRICE, 
			A.PRDT_IMG, 
        	A.LEV3_CD,
        	A.LEV3_NM,
        	A.LEV4_CD,
        	A.LEV4_NM, 
        	A.LEV5_CD,
        	A.LEV5_NM 
		FROM (
					<include refid="body2"/>
						,(		  SELECT C.LEV3_CD,C.LEV3_NM,C.LEV4_CD,C.LEV4_NM,C.LEV5_CD,C.LEV5_NM
								  FROM   (
												<include refid="categBody"/>
												<include refid="categDepthWhere"/>
								  				)AS C
						)AS CATEG
			<include refid="where"/>
			<include refid="keyWordWhere"/>
			<include refid="brandWhere"/>
			AND PM.CATEG_CD = CATEG.LEV5_CD	
			AND PM.PRDT_TP = #PRDT_TP#
       	ORDER BY CATEG.LEV3_CD, CATEG.LEV4_CD, CATEG.LEV5_CD, PM.MAKR_NM, PM.CATEG_CD , PM.PRDT_CD, PD.PRDT_DTL_CD			
		)AS A
		GROUP BY A.LEV3_CD, A.LEV4_CD, A.LEV5_CD, A.MAKR_NM, A.PRDT_CD, A.STORE_ID, A.CATEG_CD, A.PRDT_NM, A.PRDT_IMG 		
		<include refid="Common.paging.limit"/>		
	</select>
	
   <!-- 메인 / 키워드 검색 1단계 카테고리 리스트 -->
	<select id="getMainSercCategList" parameterClass="map" resultClass="map">
		/* ShopSearchDao.getMainSercCategList */
		<include refid="categBody3"/>
		<include refid="categDepthWhere"/>
		 	AND	T3.CATEG_CD IN (
														<include refid="categInfoBody"/>
														<include refid="where"/>
														<include refid="keyWordWhere"/>
														<include refid="brandWhere"/>
          										 )  
		   ORDER BY T1.CATEG_CD
	</select>

	<select id="getCategListCnt" parameterClass="map" resultClass="Integer">
		/*ShopSearchDao.getCategListCnt*/
		<include refid="Common.count.pre"/>
		<include refid="cntBody"/>
		,(		  SELECT A.LEV3_CD
				  FROM   (
								<include refid="categBody"/>
								<include refid="categDepthWhere"/>
				  				)AS A
		)AS CATEG
		<include refid="where"/>
		<include refid="keyWordWhere"/>
		<include refid="brandWhere"/>
		AND PM.CATEG_CD = CATEG.LEV3_CD
		AND PM.PRDT_TP = #PRDT_TP#
      GROUP BY PM.PRDT_CD 
		<include refid="Common.count.suf"/>
	</select>

	<select id="categList" parameterClass="map" resultClass="map" remapResults="true">
		/* ShopSearchDao.categList */
		<include refid="categBody2"/>
		<include refid="categDepthWhere"/>
		 AND    T3.CATEG_CD IN (
														<include refid="categInfoBody"/>
														<include refid="where"/>
														<include refid="keyWordWhere"/> 
														<include refid="brandWhere"/>
          										 )  
		   
		   ORDER BY T1.CATEG_CD, T2.CATEG_CD
       <isGreaterEqual property="cTp" compareValue="2">
        	,T3.CATEG_CD
       </isGreaterEqual>
       <isGreaterEqual property="cTp" compareValue="3">
        	,T4.CATEG_CD
       </isGreaterEqual> 
       <isGreaterEqual property="cTp" compareValue="4">
        	,T5.CATEG_CD
       </isGreaterEqual> 
	</select>
	
   <!-- 메인 / 키워드 검색 제조사 리스트 -->
	<select id="getMainSerchMakerList" parameterClass="map" resultClass="map">
		/* ShopSearchDao.getMainSerchMakerList */
		SELECT DISTINCT
				MAKR_CD, MAKR_NM
		FROM MAKER_INFO 
		WHERE (MAKR_CD) IN (
								<include refid="makerInfoBody"/>
								<include refid="where"/>
								<include refid="keyWordWhere"/> 
								)
		ORDER BY MAKR_NM
	</select>
	
	
	<select id="getMakerList" parameterClass="map" resultClass="map">
		/* ShopSearchDao.getMakerList */
		SELECT DISTINCT
				MAKR_CD, MAKR_NM
		FROM MAKER_INFO 
		WHERE (MAKR_CD) IN (
						<include refid="makerInfoBody"/>
						,(		  SELECT C.LEV3_CD,C.LEV3_NM,C.LEV4_CD,C.LEV4_NM,C.LEV5_CD,C.LEV5_NM
								  FROM   (
												<include refid="categBody"/>
												<include refid="categDepthWhere"/>
								  				)AS C
						)AS CATEG
			<include refid="where"/>
			<include refid="keyWordWhere"/>
			AND PM.CATEG_CD = CATEG.LEV3_CD	
		)
		ORDER BY MAKR_NM	
	</select>
	
	









	<select id="getCategList" parameterClass="map" resultClass="map">
		/*ShopSearchDao.getCategList*/
		SELECT
			A.PRDT_CD,
			A.STORE_ID ,
			A.CATEG_CD , 
			A.PRDT_NM ,
			A.MAKR_NM ,
			A.SEL_PRICE ,
			A.SALE_PRICE ,
			A.PRDT_IMG 
		FROM (
					<include refid="body"/>
						,(		  SELECT C.LEV5_CD
								  FROM   (
												<include refid="categBody"/>
												<include refid="categDepthWhere"/>
								  				)AS C
						)AS CATEG
			<include refid="where"/>
			<include refid="keyWordWhere"/>
			<include refid="brandWhere"/>
			AND PM.CATEG_CD = CATEG.LEV5_CD	
			AND PM.PRDT_TP = #PRDT_TP#
       	ORDER BY PM.CATEG_CD, PM.PRDT_CD, PD.PRDT_DTL_CD			
		)AS A
		GROUP BY A.PRDT_CD, A.STORE_ID, A.CATEG_CD, A.PRDT_NM, A.MAKR_NM, A.PRDT_IMG 		
		<include refid="Common.paging.limit"/>		
	</select>
	
	<select id="getCategList2" parameterClass="map" resultClass="map">
		/*ShopSearchDao.getCategList2*/
		SELECT
			A.PRDT_CD,
			A.STORE_ID ,
			A.CATEG_CD , 
			A.PRDT_NM ,
			A.MAKR_NM ,
			A.STNDRD ,
			A.SEL_PRICE ,
			A.SALE_PRICE ,
			A.PRDT_IMG 
		FROM (
					<include refid="body"/>
						,(		  SELECT C.LEV5_CD
								  FROM   (
												<include refid="categBody"/>
												<include refid="categDepthWhere"/>
								  				)AS C
						)AS CATEG
			<include refid="where"/>
			<include refid="keyWordWhere"/>
			<include refid="brandWhere"/>
			AND PM.CATEG_CD = CATEG.LEV5_CD	
			AND PM.PRDT_TP = #PRDT_TP#
         ORDER BY PM.CATEG_CD , PM.PRDT_CD, PD.PRDT_DTL_CD			
		)AS A
		GROUP BY A.PRDT_CD, A.STORE_ID, A.CATEG_CD, A.PRDT_NM, A.MAKR_NM, A.PRDT_IMG, A.STNDRD 		
		<include refid="Common.paging.limit"/>		
	</select>
	
	<select id="getTegCategList" parameterClass="map" resultClass="map">
		/*ShopSearchDao.getTegCategList*/
		SELECT
				A.PRDT_CD,
				A.STORE_ID ,
				A.CATEG_CD , 
				A.PRDT_NM ,
				A.MAKR_NM ,
				MIN(A.SEL_PRICE) AS SEL_PRICE,  
 		        IF(
		       		MIN(IF(A.SALE_PRICE=0,99999999,A.SALE_PRICE)) = 99999999
		        	,0 
		        	,MIN(IF(A.SALE_PRICE=0,99999999,A.SALE_PRICE))
		        ) AS SALE_PRICE,
				COUNT(A.PRDT_DTL_CD) AS DTL_CNT,   
				MIN(A.STNDRD) AS STNDRD, 
				A.PRDT_IMG, 
				A.LEV1_CD, 
				A.LEV1_NM,  
				A.LEV5_CD, 
				A.LEV5_NM 
		  FROM 
		       (SELECT PM.PRDT_CD , 
		              PD.PRDT_DTL_CD , 
		              PM.STORE_ID , 
		              PM.CATEG_CD , 
		              PM.PRDT_NM , 
		              PM.MAKR_NM , 
		              PM.PRDT_INFO , 
		              PD.STNDRD , 
		              PD.MODEL_NM , 
		              PD.SEL_PRICE , 
		              PD.SALE_PRICE , 
		              PD.OUT_AMT, 
		              PD.OUT_UNIT, 
		              PD.SOLDOUT_AT, 
		              PD.RE_SALE_DT, 
		              PM.PRDT_IMG, 
		              CATEG.LEV1_CD, 
		              CATEG.LEV1_NM,  
		              CATEG.LEV5_CD, 
		              CATEG.LEV5_NM 
		         FROM PRDT_MST PM, 
		              PRDT_DTL PD ,
		              (SELECT C.LEV1_CD,
			                     C.LEV1_NM, 
			                     C.LEV5_CD,
			                     C.LEV5_NM 
			                FROM (
												<include refid="categBody"/>
												<include refid="categDepthWhere"/>
								  				)AS C
						)AS CATEG
			<include refid="where"/>
			<include refid="brandWhere"/>
			AND PM.PRDT_INFO LIKE CONCAT('%',#mValue#,'%')
			AND PM.CATEG_CD = CATEG.LEV5_CD	
			AND PM.PRDT_TP = #PRDT_TP#	
		)AS A
		GROUP BY A.LEV1_CD, A.LEV5_CD,A.MAKR_NM, A.PRDT_CD, A.STORE_ID, A.CATEG_CD, A.PRDT_NM, A.PRDT_IMG 	
		ORDER BY A.LEV1_CD, A.PRDT_NM	
	</select>	

	<select id="getTegCategListCnt" parameterClass="map" resultClass="Integer">
		/* ShopSearchDao.getTegCategListCnt */
		<include refid="Common.count.pre"/>
		<include refid="cntBody"/>
		,(		  SELECT A.LEV5_CD
				  FROM   (
								<include refid="categBody"/>
								<include refid="categDepthWhere"/>
				  				)AS A
		)AS CATEG
		<include refid="where"/>
		<include refid="brandWhere"/>
		AND PM.PRDT_INFO LIKE CONCAT('%',#mValue#,'%')
		AND PM.CATEG_CD = CATEG.LEV5_CD
		AND PM.PRDT_TP = #PRDT_TP#
      GROUP BY PM.PRDT_CD 
		<include refid="Common.count.suf"/>
	</select>
	
	<select id="getSetSearchList" parameterClass="map" resultClass="map">
		/*ShopSearchDao.getSetSearchList*/
			SELECT M.PRDT_CD, 
			       M.STORE_ID , 
			       M.CATEG_CD , 
			       M.PRDT_NM , 
			       M.MAKR_NM , 
			       M.PRDT_NM AS STNDRD, 
			       M.PRDT_IMG 
			  FROM PROMO_BOARD B, 
			       PROMO_PRDUCT P, 
			       PRDT_MST M 
			 WHERE B.BBS_ID = 'SET' 
			       AND B.PROMO_ID = P.PROMO_ID 
			       AND P.ARTICLE_ID = '0' 
			       AND P.PRDT_DTL_CD = M.PRDT_CD 
			       AND B.USE_YN = 'Y' 
			       AND M.USE_YN = 'Y' 
			ORDER BY B.PROMO_ID  
	</select>	

	<select id="getSetSearchListCnt" parameterClass="map" resultClass="Integer">
		/* ShopSearchDao.getSetSearchListCnt */
		<include refid="Common.count.pre"/>
			SELECT 
				   M.PRDT_CD
			  FROM PROMO_BOARD B, 
			       PROMO_PRDUCT P, 
			       PRDT_MST M 
			 WHERE B.BBS_ID = 'SET' 
			       AND B.PROMO_ID = P.PROMO_ID 
			       AND P.ARTICLE_ID = '0' 
			       AND P.PRDT_DTL_CD = M.PRDT_CD 
			       AND B.USE_YN = 'Y' 
			       AND M.USE_YN = 'Y' 
      		GROUP BY P.PRDT_CD 
		<include refid="Common.count.suf"/>
	</select>
	
	<select id="getCategList3" parameterClass="map" resultClass="map">
		/*ShopSearchDao.getCategList3*/
		SELECT
			A.PRDT_CD,
			A.STORE_ID ,
			A.CATEG_CD , 
			A.PRDT_NM ,
			A.MAKR_NM ,
      	    MIN(A.SEL_PRICE) AS SEL_PRICE,  
      	    MIN(A.SALE_PRICE) AS SALE_PRICE,  
       		COUNT(A.PRDT_DTL_CD) AS DTL_CNT,   
       		MIN(A.STNDRD) AS STNDRD, 
       		MAX(A.PRDT_INFO) AS PRDT_INFO,
			A.PRDT_IMG, 
        	A.LEV3_CD,
        	A.LEV3_NM,
        	A.LEV4_CD,
        	A.LEV4_NM,
        	A.LEV5_CD,
        	A.LEV5_NM
		FROM (
					<include refid="body2"/>
						,(		  SELECT C.LEV3_CD,C.LEV3_NM,C.LEV4_CD,C.LEV4_NM,C.LEV5_CD,C.LEV5_NM
								  FROM   (
												<include refid="categBody"/>
												<include refid="categDepthWhere"/>
								  				)AS C
						)AS CATEG
			<include refid="where"/>
			<include refid="keyWordWhere"/>
			<include refid="brandWhere"/>
			AND PM.CATEG_CD = CATEG.LEV3_CD	
			AND PM.PRDT_TP = #PRDT_TP#
		)AS A
		GROUP BY A.LEV3_CD, A.LEV4_CD, A.LEV5_CD, A.MAKR_NM, A.PRDT_CD, A.STORE_ID, A.CATEG_CD, A.PRDT_NM, A.PRDT_IMG 
		ORDER BY A.LEV3_CD, A.LEV4_CD, A.LEV5_CD, A.PRDT_NM, A.MAKR_NM
		<isLessEqual property="cTp" compareValue="2">
			<include refid="Common.paging.limit"/>		
		</isLessEqual>
	</select>	
	<select id="getCategList1" parameterClass="map" resultClass="map">
		/*ShopSearchDao.getCategList1*/
		 SELECT CATEG_CD FROM `CATA_MERGE` cm WHERE `t_catacd`=#cCode#
	</select>	
	<select id="getCategSearchList" parameterClass="map" resultClass="map">
		/*ShopSearchDao.getCategSearchList*/
		SELECT
			A.PRDT_CD,
			A.STORE_ID ,
			A.CATEG_CD , 
			A.PRDT_NM ,
			A.MAKR_NM ,
			A.SEL_PRICE ,
			A.SALE_PRICE
			A.PRDT_IMG, 
        	A.LEV3_CD,
        	A.LEV3_NM,
        	A.LEV4_CD,
        	A.LEV4_NM,
        	A.LEV5_CD,
        	A.LEV5_NM
		FROM (
					<include refid="body2"/>
						,(		  SELECT C.LEV3_CD,C.LEV3_NM,C.LEV4_CD,C.LEV4_NM,C.LEV5_CD,C.LEV5_NM
								  FROM   (
												<include refid="categBody"/>
												<include refid="categDepthWhere"/>
								  				)AS C
						)AS CATEG
			, PROMO_PRDUCT P
			<include refid="where"/>
			<include refid="keyWordWhere"/>
			<include refid="brandWhere"/>
			AND PM.PRDT_CD = P.PRDT_CD
			AND P.PROMO_ID = #sValue#
			AND PM.CATEG_CD = CATEG.LEV5_CD	
			AND PM.PRDT_TP = #PRDT_TP#
         ORDER BY CATEG.LEV3_CD, CATEG.LEV4_CD, CATEG.LEV5_CD, PM.MAKR_NM , PM.PRDT_CD, PD.PRDT_DTL_CD		
		)AS A
		GROUP BY A.LEV3_CD, A.LEV4_CD, A.LEV5_CD, A.MAKR_NM, A.PRDT_CD, A.STORE_ID, A.CATEG_CD, A.PRDT_NM, A.PRDT_IMG 		
	</select>	
	
	<select id="getCategSearchCnt" parameterClass="map" resultClass="Integer">
		/*ShopSearchDao.getCategSearchCnt*/
		<include refid="Common.count.pre"/>
		<include refid="cntBody"/>
		,(		  SELECT A.LEV5_CD
				  FROM   (
								<include refid="categBody"/>
								<include refid="categDepthWhere"/>
				  				)AS A
		)AS CATEG
		, PROMO_PRDUCT P
		<include refid="where"/>
		<include refid="keyWordWhere"/>
		<include refid="brandWhere"/>
		AND PM.PRDT_CD = P.PRDT_CD
		AND P.PROMO_ID = #sValue#
		AND PM.CATEG_CD = CATEG.LEV5_CD
		AND PM.PRDT_TP = #PRDT_TP#
      GROUP BY PM.PRDT_CD 
		<include refid="Common.count.suf"/>
	</select>	
	
	<select id="getCategList4" parameterClass="map" resultClass="map">
		/*ShopSearchDao.getCategList4*/
		SELECT
			A.PRDT_CD,
			A.STORE_ID ,
			A.CATEG_CD , 
			A.PRDT_NM ,
			A.MAKR_NM ,
			A.STNDRD ,
			A.SEL_PRICE ,
			A.SALE_PRICE ,
			A.PRDT_IMG, 
        	A.LEV3_CD,
        	A.LEV3_NM,
        	A.LEV4_CD,
        	A.LEV4_NM ,
        	A.LEV5_CD,
        	A.LEV5_NM 
		FROM (
					<include refid="body2"/>
						,(		  SELECT C.LEV3_CD,C.LEV3_NM,C.LEV4_CD,C.LEV4_NM,C.LEV5_CD,C.LEV5_NM
								  FROM   (
												<include refid="categBody"/>
												<include refid="categDepthWhere"/>
								  				)AS C
						)AS CATEG
			<include refid="where"/>
			<include refid="keyWordWhere"/>
			<include refid="brandWhere"/>
			AND PM.CATEG_CD = CATEG.LEV5_CD	
			AND PM.PRDT_TP = #PRDT_TP#
         ORDER BY CATEG.LEV3_CD, CATEG.LEV4_CD, CATEG.LEV5_CD, PM.MAKR_NM, PM.PRDT_CD, PD.PRDT_DTL_CD			
		)AS A
		GROUP BY A.LEV3_CD, A.LEV4_CD, A.LEV5_CD, A.MAKR_NM, A.PRDT_CD, A.STORE_ID, A.CATEG_CD, A.PRDT_NM, A.PRDT_IMG, A.STNDRD 		
		<isLessEqual property="cTp" compareValue="2">
			<include refid="Common.paging.limit"/>		
		</isLessEqual>
	</select>	 

	<!-- 상품 상세 정보 -->
	<select id="prdtInfo" parameterClass="map" resultClass="map">
		/* ShopSearchDao.prdtInfo */
		<include refid="prductBody"/>
		<include refid="prductWhere"/>
	</select>
	
	<select id="getCombo" parameterClass="map" resultClass="map">
			/* ShopSearchDao.getCombo */
		 SELECT
			DTL_CD AS cbCode
			,DTL_CD_NM AS cbText  
		FROM  CMM_CODE_DTL 
		WHERE 1 = 1
		AND USE_YN 		= 'Y'
		AND VIEW_YN 		= 'Y'
		AND CL_CD 			= #sCd#
		ORDER BY SORT_ORDR, DTL_CD_NM
	</select>	
 
	<select id="getBanner" parameterClass="map" resultClass="map">
			/* ShopSearchDao.getBanner */
		SELECT 
			B.BBS_ID AS bTp 
			,B.ARTICLE_ID AS bId
       		,B.RELATE_ARTICLE_AT AS sRelNo
       		,B.TITLE	AS bTit
       		,B.CONTENT AS bCon
       		,P.PROMO_TP  AS pTp
       		,P.PROMO_ID  AS pId
       		,P.CATEG_CD AS pCd
       		,P.PRDT_CD AS pPrdtCd
			,CONCAT(BF.FILE_STRE_COURS, BF.FILE_STRE_NM) AS bImg
		FROM ATCH_FILE BF, BOARD B        
			   LEFT JOIN PROMO_BOARD P
		       	ON B.ARTICLE_ID = P.ARTICLE_ID
				OR B.RELATE_ARTICLE_AT = P.PROMO_ID  
 		WHERE B.BBS_ID IN('MSB','MCB','STF','MPB') 
			AND B.BBS_STRT_DT <![CDATA[<=]]> DATE_FORMAT(NOW(),'%Y%m%d')
			AND B.BBS_END_DT <![CDATA[>=]]> DATE_FORMAT(NOW(),'%Y%m%d')
			AND B.BBS_ID = BF.ATCH_TP
			AND B.ARTICLE_ID = BF.ATCH_FILE_NO
			AND B.USE_YN = 'Y'
			AND BF.USE_AT = 'Y'
		ORDER BY B.BBS_TP DESC, B.BBS_ID, P.CATEG_CD
	</select>	
 
	<select id="getMainPrdtList" parameterClass="map" resultClass="map">
			/* ShopSearchDao.getMainPrdtList */
			SELECT MD.RECOM_ID AS sId , 
			       PM.PRDT_IMG AS sImg , 
			       PM.PRDT_CD AS sPcd , 
			       COUNT(PD.PRDT_DTL_CD) AS sScd , 
			       MIN(PD.STNDRD) AS sSt , 
			       MIN(PD.SEL_PRICE) AS sPrice , 
			       MIN(PD.SALE_PRICE) AS sSprice , 
			       PM.PRDT_NM AS sNm , 
			       PM.MAKR_NM AS sMk , 
			       MD.RECOM_TP AS sRTp 
			  FROM RECOM_PRDUCT MD, 
			       PRDT_MST PM, 
			       PRDT_DTL PD 
			 WHERE MD.PRDT_CD 	= PM.PRDT_CD 
			 	AND PD.PRDT_CD 		= PM.PRDT_CD 
			    AND PD.STORE_ID 	= PM.STORE_ID 
			 GROUP BY MD.RECOM_ID, PD.PRDT_CD, PM.PRDT_NM,PM.MAKR_NM
			ORDER BY MD.RECOM_ID, MD.RECOM_TP, PM.PRDT_NM 
	</select>	
	<select id="getMainPrdtList2" parameterClass="map" resultClass="map">
			/* ShopSearchDao.getMainPrdtList */
			SELECT MD.RECOM_ID  	AS sId ,
			       PM.PRDT_IMG    	AS sImg ,
			       PD.PRDT_CD     	AS sPcd ,
			       PD.PRDT_DTL_CD 	AS sScd ,
			       PD.STNDRD      	AS sSt ,
			       PD.SEL_PRICE   	AS sPrice ,
			       PD.SALE_PRICE   	AS sSprice ,
			       PM.PRDT_NM     	AS sNm ,
			       PM.MAKR_NM     	AS sMk ,
			       MD.RECOM_TP    	AS sRTp
			FROM   RECOM_PRDUCT MD,
			       PRDT_MST PM,
			       PRDT_DTL PD
			WHERE  MD.PRDT_DTL_CD = PD.PRDT_DTL_CD
				AND  PD.PRDT_CD     = PM.PRDT_CD
				AND  PD.STORE_ID    = PM.STORE_ID
			ORDER BY MD.RECOM_ID, MD.RECOM_TP, PM.PRDT_NM 
	</select>	
		
	<select id="getCatalogList" parameterClass="map" resultClass="map">
			/* ShopSearchDao.getCatalogList */			
			SELECT p1.PRDT_CD AS FILE_ID,p1.PRDT_IMG AS IMG, 
			IF( p1.PRDT_CD = X.CUR , 'O', 'X') AS CUR FROM PRDT_MST p1,(
			SELECT PRDT_CD AS CUR,MAKR_NM
			FROM PRDT_MST 
			WHERE PRDT_CD = #pCode#) AS X 
			WHERE p1.`MAKR_NM`= X.MAKR_NM
	</select>
			
	<select id="getRecommendList" parameterClass="map" resultClass="map">
			/* ShopSearchDao.getRecommendList */
		SELECT 
			   PM.PRDT_CD , 
		       PM.PRDT_NM , 
		       PM.MAKR_NM , 
		       PM.PRDT_INFO , 
		       MIN(PD.SEL_PRICE) AS SEL_PRICE , 
		       MIN(PD.SALE_PRICE) AS SALE_PRICE , 
		       PM.PRDT_IMG, 
		       MIN(PD.STNDRD) AS STNDRD,
		       COUNT(PD.PRDT_DTL_CD) AS DTL_CNT,
		       CASE WHEN LEFT(A.CATEG_CD,3) = LEFT(PM.CATEG_CD,3) THEN 1 ELSE 2 END COR,
		       CASE WHEN A.MAKR_CD != PM.MAKR_CD THEN 1 ELSE 2 END MOR,
		       CASE WHEN A.PRDT_NM = PM.PRDT_NM THEN 1 WHEN PM.PRDT_NM LIKE CONCAT(A.PRDT_NM,'%') THEN 2 ELSE 3 END VOR     
		  FROM PRDT_MST PM, 
		       PRDT_DTL PD, 
		       PRDT_MST A 
		WHERE A.PRDT_CD 		= #pCode# 
	       AND (
		       		PM.PRDT_NM LIKE CONCAT('%',A.PRDT_NM,'%') 
		      	 OR PM.PRDT_NM LIKE CONCAT('%', IFNULL(A.PRDT_ETC_NM,'123456789'), '%') 
	       	)
			AND PM.PRDT_CD 	!= #pCode#
			AND PM.PRDT_CD 	= PD.PRDT_CD	
			AND PM.STORE_ID 	= PD.STORE_ID
	   		AND PM.PRDT_TP 	= 'J'
			AND PM.USE_YN 		= 'Y'
			AND PD.USE_YN 		= 'Y'
	   	GROUP BY VOR, PM.PRDT_CD 
		ORDER BY COR, VOR, MOR, PM.PRDT_NM 
			LIMIT 0, 80
	</select>
			
	<select id="getQnaList" parameterClass="map" resultClass="map">
		/* ShopSearchDao.getQnaList */
		SELECT 
				TITLE, 
				CONTENT, 
				CREATE_DT, 
				ANSWER, 
				ANSWER_DT  
		  FROM CONTACT_BOARD 
		 WHERE BBS_ID 		= 'PDT' 
		 	 AND USE_YN 		=	'Y'  
		 	 AND RELATE_CD 	= #pCode#
	</select>

	<select id="stndrdList" parameterClass="map" resultClass="map">
		/* ShopSearchDao.stndrdList */
		<include refid="stndrdBody"/>
		<include refid="stndrdWhere"/>
			ORDER BY PD.STNDRD
	</select>
	
	<select id="getSetItemList" parameterClass="map" resultClass="map">
		/* ShopSearchDao.getSetItemList */
		SELECT 
				PM.PRDT_CD , 
				PM.PRDT_NM , 
				PM.MAKR_NM , 
		        PM.PRDT_IMG, 
				PD.PRDT_DTL_CD,
				PD.STNDRD,
				PD.MODEL_NM,
				PD.SEL_PRICE,
				PD.SALE_PRICE,
				PD.OUT_AMT,
				PD.OUT_UNIT,
				PD.STORE_ID,
				PD.SOLDOUT_AT,
				DATE_FORMAT(PD.RE_SALE_DT,'%Y-%m-%d') AS RE_SALE_DT,
		    B.PRDT_CD AS IMG_NM,
		    B.CATEG_CD AS IMG_SEQ 
		  FROM   PROMO_PRDUCT A, PROMO_PRDUCT B, PROMO_BOARD C, PRDT_MST PM, PRDT_DTL PD
		  WHERE  A.PRDT_CD 			= #pCode# 
				AND B.ARTICLE_ID 		!=0
				AND A.ARTICLE_ID 		= 0
				AND A.PROMO_ID 		= B.PROMO_ID
				AND A.PROMO_ID 		= C.PROMO_ID
				AND B.PRDT_DTL_CD 	= PD.PRDT_DTL_CD 
				AND PD.PRDT_CD 			= PM.PRDT_CD
				AND C.USE_YN				= 'Y'
				AND PM.USE_YN			= 'Y'
				AND PD.USE_YN			= 'Y'
			ORDER BY PM.MAKR_NM, PM.PRDT_NM, PD.SEL_PRICE
	</select>
	
	<select id="categInfo" parameterClass="map" resultClass="map">
		/* ShopSearchDao.categInfo */
		<include refid="categBody"/>
		<include refid="categWhere"/>
		   ORDER BY T1.CATEG_CD, T2.CATEG_CD, T3.CATEG_CD, T4.CATEG_CD, T5.CATEG_CD
	</select>
		
	<select id="getEbookPrdtList" parameterClass="map" resultClass="map">
		/* ShopSearchDao.getEbookPrdtList */
			SELECT 
				   PM.PRDT_CD ,
			       PM.PRDT_NM ,
			       PM.MAKR_NM ,
			       PD.STNDRD ,
			       PD.MODEL_NM ,
			       PD.SEL_PRICE ,
			       PD.SALE_PRICE ,
			       CONCAT(LEFT(PD.BARCODE,3),'-',RIGHT(PD.BARCODE,4)) AS ORG_CD,
			       PM.PRDT_IMG
			FROM   PRDT_MST PM,
			       PRDT_DTL PD
			WHERE PM.PRDT_CD = PD.PRDT_CD	
				AND PM.STORE_ID = PD.STORE_ID
				AND PM.USE_YN ='Y'
				AND PD.USE_YN ='Y'
            	AND PM.EBOOK_IMG_NO = #eBookNo#
            ORDER BY PM.PRDT_CD, PD.STNDRD
	</select>
	
	<select id="getMovieList" parameterClass="map" resultClass="map">
			/* ShopSearchDao.getMovieList */
			SELECT 
               P.ARTICLE_ID AS sArtCd
               ,P.PRDT_CD AS sPrdtCd
               ,P.URL AS sUrl
               ,P.WIDTH AS sWidth
               ,P.HEIGHT AS sHeight
			FROM PROMO_BOARD AS P
			WHERE P.URL IS NOT NULL
			AND P.USE_YN 	= 'Y'
			AND P.BBS_ID 		= 'PMV'
			AND P.PRDT_CD 	= #pCode#
	</select>	
	
	<select id="getAdPrdtList" parameterClass="map" resultClass="map">
			/* ShopSearchDao.getAdPrdtList */
			SELECT 
					M.PRDT_CD ,
					M.PRDT_NM ,
					M.MAKR_NM,
					M.PRDT_IMG,
	                IFNULL(M.V_MD_AT,'N') AS V_MD_AT,
	                COUNT(D.PRDT_DTL_CD) AS DTL_CNT,
	                D.STNDRD,                 
	                MIN(IF(D.SALE_PRICE = 0 , D.SEL_PRICE, D.SALE_PRICE)) AS SEL_PRICE
			  FROM RECOM_PRDUCT R, PRDT_MST M          
				   LEFT JOIN PRDT_DTL D
	          ON M.PRDT_CD = D.PRDT_CD 
	            AND D.SOLDOUT_AT = 'N'
	            AND D.USE_YN = 'Y'
	            AND D.DELETE_DT IS NULL   
			 WHERE R.RECOM_ID = 'ad'
			       AND R.PRDT_CD = #pCode#
			       AND R.PRDT_DTL_CD = M.PRDT_CD     
	         GROUP BY M.PRDT_CD
	</select>	

</mapper>